<?php	
header("content-type:text/html;charset=utf-8");

/*
 * 对象:
 * 	万物皆对象
 * 	客观存在的任何一个实体都是一个对象
 * 类:
 * 	对相同或相似对象的一个抽象的描述
 * 
 * 类与对象的关系
 * 	先有类  通过类实例化得到对象
 * 
 * 类的定义格式
 * 		[修饰符] class 类名
 * 		{
 * 			[成员属性]
 * 				不能重复定义
 * 				可以有默认值
 * 				默认值不可以是变量
 * 				默认值不可以有运算
 * 				默认值可以是常量
 * 				值可以是任意类型
 * 			[成员方法]
 * 				与函数一致
 * 				可以直接使用成员属性		
 * 		}
 * 
 * 成员属性的作用:
 * 	如果在多个方法之间,要进行数据传递,就需要用到成员属性
 * 成员方法的作用:
 * 	给类提供功能,让对象有申事情可做.
 * 
 * 类的实例化
 * 	new 每次new 都会得到一个新的对象
 * 	使用new 的时候,会自动调用构造方法
 * 
 * 对象成员的访问符
 * 	->
 * 	$obj->name;	(name加上$的话,就变成了可变变量)
 * 	$obj->say();
 * 
 * 伪变量 $this
 * 	代表的是对象,表示的是自己
 * 	成员方法不能访问外部变量,但是可以直接通过$this访问自己的属性.
 * 
 * 构造方法 __construct()
 * 	使用new关键字得到对象的时候 自动调用 一般用于初始化
 * 	1.与类名相同的 方法
 * 	2.php特有的构造方法
 * 
 * 析构方法 __destruct()
 * 	对象被销毁时自动调用 用于写遗言
 * 	回收资源/释放内存
 * 
 * =	取别名,不会产生新的对象
 * ==	只要两个对象是同一个类的实例并且所有的属性及值都相等 则相等
 * ===	判断两个对象是不是同一个对象
 * 
 * */

/*$a = 10;
// 相当于 $num = $a;
function test(&$num){
	$num = 20;
}
test($a);
echo $a;*/

//对象的引用传值
class A
{
	public $name;
}
$p = new A();

//相当于 $obj = $p
function test($obj){
	$obj->name = 'jack';
}
test($p);
echo $p->name;
